name: online-ide

services:
    online-ide:
        image: ghcr.io/manangandhi1810/online-ide
        restart: unless-stopped
        ports:
            - 3000:3000/tcp
        volumes:
            - ./backend/.env.prod:/usr/src/app/.env
            - /var/run/docker.sock:/var/run/docker.sock
            # - /path/to/ssl/fullchain.pem:/usr/src/app/ssl/fullchain.pem
            # - /path/to/ssl/privkey.pem:/usr/src/app/ssl/privkey.pem
        user: root
        command: sh -c "npx prisma migrate deploy && npm run start"

    postgresql:
        image: bitnami/postgresql:latest
        restart: unless-stopped
        ports:
            - "5432:5432/tcp"
        volumes:
            - pg-data:/bitnami/postgresql
        environment:
            - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
            - POSTGRESQL_LOG_HOSTNAME=true
            - POSTGRESQL_REPLICATION_MODE=master
            - POSTGRESQL_REPLICATION_USER=repl_user
            - POSTGRESQL_REPLICATION_PASSWORD=repl_user
            - POSTGRESQL_USERNAME=postgres
            - POSTGRESQL_PASSWORD=postgres
            - POSTGRESQL_DATABASE=cloud-ide
        labels:
            - "com.centurylinklabs.watchtower.enable=false"

    redis:
        image: bitnami/redis:latest
        restart: unless-stopped
        ports:
            - "6379:6379/tcp"
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
        labels:
            - "com.centurylinklabs.watchtower.enable=false"

    code-runner:
        image: ghcr.io/manangandhi1810/code-runner

    zookeeper:
        image: zookeeper:latest
        ports:
            - 2181:2181/tcp

    kafka:
        image: wurstmeister/kafka:latest
        restart: unless-stopped
        ports:
            - 9092:9092/tcp
        expose:
            - "9093"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_CREATE_TOPICS: "resume-upload:1:1,feedback-request:1:1"
        depends_on:
            zookeeper:
                condition: service_started
        healthcheck:
            test: kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1
            interval: 5s
            timeout: 5s
            retries: 10

volumes:
    pg-data:
